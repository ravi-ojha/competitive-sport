def dfs(n,c,vis,grid):
    if c == 0:
        return True
    for i in xrange(n):
        if vis[i] == 0:
            for j in xrange(n):
                if vis[j] == 0 and grid[i][j] == 1:
                    vis[i] = 1
                    vis[j] = 1
                    if dfs(n,c-2,vis,grid):
                        return True
                    else:
                        vis[j] = 0
                        vis[i] = 0
            if j == n:
            	print 'herhe'
                return False
    return False

def seagrp():
    for t in xrange(input()):
        n,m = map(int,raw_input().split())
        vis = [0]*110
        grid = []
        for i in xrange(110):
            grid.append(vis)
        for i in xrange(m):
            x,y = map(int,raw_input().split())
            x -= 1
            y -= 1
            grid[x][y] = 1
            grid[y][x] = 1
        if dfs(n,n,vis,grid):
            print 'YES'
        else:
            print 'NO'
seagrp()
